// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.3
// source: proto/meta.proto

package metapb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ApiWithMetaServiceClient is the client API for ApiWithMetaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApiWithMetaServiceClient interface {
	CreateBucket(ctx context.Context, in *CreateBucketReq, opts ...grpc.CallOption) (*CreateBucketResp, error)
	DeleteBucket(ctx context.Context, in *DeleteBucketReq, opts ...grpc.CallOption) (*DeleteBucketResp, error)
	GetFiles(ctx context.Context, in *GetFilesReq, opts ...grpc.CallOption) (*GetFilesResp, error)
	CreateFile(ctx context.Context, in *CreateFileReq, opts ...grpc.CallOption) (*CreateFileResp, error)
	DeleteFile(ctx context.Context, in *DeleteFileReq, opts ...grpc.CallOption) (*DeleteFileResp, error)
	GetFileChunks(ctx context.Context, in *GetFileChunksReq, opts ...grpc.CallOption) (*GetFileChunksResp, error)
}

type apiWithMetaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApiWithMetaServiceClient(cc grpc.ClientConnInterface) ApiWithMetaServiceClient {
	return &apiWithMetaServiceClient{cc}
}

func (c *apiWithMetaServiceClient) CreateBucket(ctx context.Context, in *CreateBucketReq, opts ...grpc.CallOption) (*CreateBucketResp, error) {
	out := new(CreateBucketResp)
	err := c.cc.Invoke(ctx, "/meta.ApiWithMetaService/CreateBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiWithMetaServiceClient) DeleteBucket(ctx context.Context, in *DeleteBucketReq, opts ...grpc.CallOption) (*DeleteBucketResp, error) {
	out := new(DeleteBucketResp)
	err := c.cc.Invoke(ctx, "/meta.ApiWithMetaService/DeleteBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiWithMetaServiceClient) GetFiles(ctx context.Context, in *GetFilesReq, opts ...grpc.CallOption) (*GetFilesResp, error) {
	out := new(GetFilesResp)
	err := c.cc.Invoke(ctx, "/meta.ApiWithMetaService/GetFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiWithMetaServiceClient) CreateFile(ctx context.Context, in *CreateFileReq, opts ...grpc.CallOption) (*CreateFileResp, error) {
	out := new(CreateFileResp)
	err := c.cc.Invoke(ctx, "/meta.ApiWithMetaService/CreateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiWithMetaServiceClient) DeleteFile(ctx context.Context, in *DeleteFileReq, opts ...grpc.CallOption) (*DeleteFileResp, error) {
	out := new(DeleteFileResp)
	err := c.cc.Invoke(ctx, "/meta.ApiWithMetaService/DeleteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiWithMetaServiceClient) GetFileChunks(ctx context.Context, in *GetFileChunksReq, opts ...grpc.CallOption) (*GetFileChunksResp, error) {
	out := new(GetFileChunksResp)
	err := c.cc.Invoke(ctx, "/meta.ApiWithMetaService/GetFileChunks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiWithMetaServiceServer is the server API for ApiWithMetaService service.
// All implementations must embed UnimplementedApiWithMetaServiceServer
// for forward compatibility
type ApiWithMetaServiceServer interface {
	CreateBucket(context.Context, *CreateBucketReq) (*CreateBucketResp, error)
	DeleteBucket(context.Context, *DeleteBucketReq) (*DeleteBucketResp, error)
	GetFiles(context.Context, *GetFilesReq) (*GetFilesResp, error)
	CreateFile(context.Context, *CreateFileReq) (*CreateFileResp, error)
	DeleteFile(context.Context, *DeleteFileReq) (*DeleteFileResp, error)
	GetFileChunks(context.Context, *GetFileChunksReq) (*GetFileChunksResp, error)
	mustEmbedUnimplementedApiWithMetaServiceServer()
}

// UnimplementedApiWithMetaServiceServer must be embedded to have forward compatible implementations.
type UnimplementedApiWithMetaServiceServer struct {
}

func (UnimplementedApiWithMetaServiceServer) CreateBucket(context.Context, *CreateBucketReq) (*CreateBucketResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBucket not implemented")
}
func (UnimplementedApiWithMetaServiceServer) DeleteBucket(context.Context, *DeleteBucketReq) (*DeleteBucketResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBucket not implemented")
}
func (UnimplementedApiWithMetaServiceServer) GetFiles(context.Context, *GetFilesReq) (*GetFilesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFiles not implemented")
}
func (UnimplementedApiWithMetaServiceServer) CreateFile(context.Context, *CreateFileReq) (*CreateFileResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFile not implemented")
}
func (UnimplementedApiWithMetaServiceServer) DeleteFile(context.Context, *DeleteFileReq) (*DeleteFileResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFile not implemented")
}
func (UnimplementedApiWithMetaServiceServer) GetFileChunks(context.Context, *GetFileChunksReq) (*GetFileChunksResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFileChunks not implemented")
}
func (UnimplementedApiWithMetaServiceServer) mustEmbedUnimplementedApiWithMetaServiceServer() {}

// UnsafeApiWithMetaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApiWithMetaServiceServer will
// result in compilation errors.
type UnsafeApiWithMetaServiceServer interface {
	mustEmbedUnimplementedApiWithMetaServiceServer()
}

func RegisterApiWithMetaServiceServer(s grpc.ServiceRegistrar, srv ApiWithMetaServiceServer) {
	s.RegisterService(&ApiWithMetaService_ServiceDesc, srv)
}

func _ApiWithMetaService_CreateBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBucketReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiWithMetaServiceServer).CreateBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.ApiWithMetaService/CreateBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiWithMetaServiceServer).CreateBucket(ctx, req.(*CreateBucketReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiWithMetaService_DeleteBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBucketReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiWithMetaServiceServer).DeleteBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.ApiWithMetaService/DeleteBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiWithMetaServiceServer).DeleteBucket(ctx, req.(*DeleteBucketReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiWithMetaService_GetFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFilesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiWithMetaServiceServer).GetFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.ApiWithMetaService/GetFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiWithMetaServiceServer).GetFiles(ctx, req.(*GetFilesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiWithMetaService_CreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiWithMetaServiceServer).CreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.ApiWithMetaService/CreateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiWithMetaServiceServer).CreateFile(ctx, req.(*CreateFileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiWithMetaService_DeleteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiWithMetaServiceServer).DeleteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.ApiWithMetaService/DeleteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiWithMetaServiceServer).DeleteFile(ctx, req.(*DeleteFileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiWithMetaService_GetFileChunks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileChunksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiWithMetaServiceServer).GetFileChunks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.ApiWithMetaService/GetFileChunks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiWithMetaServiceServer).GetFileChunks(ctx, req.(*GetFileChunksReq))
	}
	return interceptor(ctx, in, info, handler)
}

// ApiWithMetaService_ServiceDesc is the grpc.ServiceDesc for ApiWithMetaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApiWithMetaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "meta.ApiWithMetaService",
	HandlerType: (*ApiWithMetaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBucket",
			Handler:    _ApiWithMetaService_CreateBucket_Handler,
		},
		{
			MethodName: "DeleteBucket",
			Handler:    _ApiWithMetaService_DeleteBucket_Handler,
		},
		{
			MethodName: "GetFiles",
			Handler:    _ApiWithMetaService_GetFiles_Handler,
		},
		{
			MethodName: "CreateFile",
			Handler:    _ApiWithMetaService_CreateFile_Handler,
		},
		{
			MethodName: "DeleteFile",
			Handler:    _ApiWithMetaService_DeleteFile_Handler,
		},
		{
			MethodName: "GetFileChunks",
			Handler:    _ApiWithMetaService_GetFileChunks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/meta.proto",
}
